version: "3.9"

services:
  # Django Web Service
  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    env_file: .env
    ports:
      - "8000:8000"
    volumes:
      - .:/app                     # исходники Django
      - ./media:/app/media         # загруженные файлы
    depends_on:
      - postgres

  # React Frontend Service
  frontend:
    image: node:18-alpine
    working_dir: /app
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app           # исходники React
      - /app/node_modules          # node_modules внутри контейнера
    environment:
      - CHOKIDAR_USEPOLLING=true
    command: >
      sh -c "npm install && npm start"
    depends_on:
      - web

  # PostgreSQL Database
  postgres:
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_DB:               ${DB_NAME}
      POSTGRES_USER:             ${DB_USER}
      POSTGRES_PASSWORD:         ${DB_PASS}
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - ./pgdata:/var/lib/postgresql/data

  # Redis (кэш / Celery)
  redis:
    image: redis:7
    ports:
      - "6379:6379"

  # MinIO (S3-совместимое хранилище)
  minio:
    image: quay.io/minio/minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER:      ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD:  ${MINIO_SECRET_KEY}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - miniodata:/data

  # Adminer (веб-интерфейс к БД)
  adminer:
    image: adminer
    restart: always
    depends_on:
      - postgres
    ports:
      - "8080:8080"

volumes:
  miniodata:
